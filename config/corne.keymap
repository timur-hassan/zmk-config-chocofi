/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    tapping-term-ms = <125>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <100>;
};

/ {
    combos {
        compatible = "zmk,combos";

        Thumbs {
            bindings = <&mo 3>;
            key-positions = <38 39>;
            layers = <0>;
        };
    };

    behaviors {
        mt0: mt0 {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD Tap 0";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <140>;
            flavor = "hold-preferred";
        };

        mti: mti {
            compatible = "zmk,behavior-hold-tap";
            label = "MTI";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <225>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <200>;
        };
    };

    macros {
        xl_del_row: xl_del_row {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(MINUS) &kp R &kp ENTER>;
            label = "XL_DEL_ROW";
        };

        xl_all_borders: xl_all_borders {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp H &kp B &kp A>;
            label = "XL_ALL_BORDERS";
        };

        NP: NP {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_3 &kp HASH &kp LS(J) &kp F &kp L &kp S &kp J &kp F &kp L &kp S>;
            label = "NP";
        };

        Npin: Npin {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_1 &kp NUMBER_6 &kp NUMBER_2 &kp N5 &kp NUMBER_2 &kp N5 &kp NUMBER_3 &kp NUMBER_6 &kp EXCLAMATION>;
            label = "NPIN";
        };

        CDR_POPULATION_IDENTIFIED: CDR_POPULATION_IDENTIFIED {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp P &kp R &kp I &kp S &kp T &kp I &kp N &kp E &kp DOT &kp C &kp D &kp R &kp UNDER &kp P &kp O &kp P &kp U &kp L &kp A &kp T &kp I &kp O &kp N &kp UNDER &kp I &kp D &kp E &kp N &kp T &kp I &kp F &kp I &none>;
            label = "CDR_POPULATION_IDENTIFIED";
        };

        CDR_REPORTING: CDR_REPORTING {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp P &kp R &kp I &kp S &kp T &kp I &kp N &kp E &kp DOT &kp C &kp D &kp R &kp UNDER &kp R &kp E &kp P &kp O &kp R &kp T &kp I &kp N &kp G>;
            label = "CDR_REPORTING";
        };

        XCAR: XCAR {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp P &kp R &kp I &kp S &kp T &kp I &kp N &kp E &kp UNDER &kp C &kp D &kp L &kp DOT &kp B &kp UNDER &kp UNDER &kp C &kp Z &kp UNDER &kp UNDER &kp N2 &kp N8 &kp N4 &kp N4 &kp N2 &kp UNDER &kp C &kp S &kp T &kp UNDER &kp X &kp C &kp A &kp R>;
            label = "XCAR";
        };

        testchars: testchars {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp J &kp F &kp L &kp S &kp J &kp F &kp L &kp S &kp J &kp F &kp L &kp S &kp J &kp F &kp L &kp S &kp J &kp F &kp L &kp S &kp J &kp F &kp L &kp S &kp J &kp F &kp L &kp S &kp J &kp F &kp L &kp S &kp J &kp F &kp L &kp S &kp J &kp F &kp L &kp S &kp J &kp F &kp L &kp S &kp J &kp F &kp L &kp S &kp J &kp F &kp L &kp S &kp J &kp F &kp L &kp S &kp J &kp F &kp L &kp S &kp J &kp F &kp L &kp S &kp J &kp F &kp L &kp S &kp J &kp F &kp L &kp S>;
            label = "TESTCHARS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &mt EQUAL Q  &mt TILDE W  &mt EXCL E    &mt AT_SIGN R           &mt CARET T        &mt SQT Y   &mt QUESTION U         &mti PIPE I          &mt ASTERISK O           &kp P                &none
&none  &lt 1 A      &mt UNDER S  &mt MINUS D   &mt TAB F               &mt GRAVE G        &kp H       &kp J                  &kp K                &kp L                    &lt 2 SEMICOLON      &none
&none  &mt LC(Z) Z  &mt LC(X) X  &mt LC(C) C   &mt LC(V) V             &mt AMPERSAND B    &mt HASH N  &mt PERCENT M          &mt LESS_THAN COMMA  &mt GREATER_THAN PERIOD  &mt BACKSLASH SLASH  &none
                                 &kp LEFT_ALT  &mt LEFT_CONTROL SPACE  &lt 2 BACKSPACE    &lt 1 ESC   &mt0 LEFT_SHIFT ENTER  &kp LEFT_GUI
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &bt BT_CLR  &mkp MCLK         &mkp MB2          &mkp LCLK               &kp K_APPLICATION    &kp HOME      &kp PAGE_DOWN  &kp PAGE_UP   &kp END       &kp PRINTSCREEN   &none
&none  &trans      &kp LEFT_CONTROL  &kp LEFT_SHIFT    &kp TAB                 &mt CAPSLOCK F2      &kp LEFT      &kp DOWN       &kp UP        &kp RIGHT     &kp K_PLAY_PAUSE  &trans
&none  &NP         &Npin             &kp LG(LC(LEFT))  &kp LG(LC(RIGHT))       &xl_del_row          &bt BT_SEL 0  &bt BT_SEL 1   &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &trans
                                     &trans            &mt LEFT_CONTROL ENTER  &kp DEL              &trans        &trans         &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &none        &kp TILDE       &kp EXCLAMATION       &kp AT                 &kp PRCNT          &kp ASTERISK  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp SLASH   &none
&none  &kp MINUS    &kp UNDERSCORE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &xl_all_borders    &kp MINUS     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp COMMA   &none
&none  &kp PERCENT  &to 0           &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp AMPERSAND      &kp PLUS      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD  &none
                                    &kp LEFT_ALT          &trans                 &trans             &none         &trans        &kp NUMBER_0
            >;
        };

        FN {
            bindings = <
&none  &none                       &none           &none   &none       &none     &trans  &kp F7  &kp F8  &kp F9  &kp F10  &none
&none  &CDR_POPULATION_IDENTIFIED  &CDR_REPORTING  &XCAR   &testchars  &none     &trans  &kp F4  &kp F5  &kp F6  &kp F11  &none
&none  &none                       &none           &none   &none       &none     &none   &kp F1  &kp F2  &kp F3  &kp F12  &none
                                                   &trans  &trans      &trans    &trans  &trans  &trans
            >;
        };
    };
};

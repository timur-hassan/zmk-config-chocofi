/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &mt EQUAL Q  &mt LC(W) W  &kp E         &kp R                   &mt TAB T          &mt LC(Y) Y  &kp U                 &mt PIPE I    &mt EXCL O  &mt SINGLE_QUOTE P   &none
&none  &lt 1 A      &mt UNDER S  &mt MINUS D   &mt LA(TAB) F           &mt ESCAPE G       &kp H        &kp J                 &kp K         &kp L       &mt COLON SEMICOLON  &none
&none  &mt LC(Z) Z  &mt LC(X) X  &mt LC(C) C   &mt LC(V) V             &mt LC(B) B        &kp N        &kp M                 &kp COMMA     &kp DOT     &mt BACKSLASH SLASH  &none
                                 &kp LEFT_ALT  &mt LEFT_CONTROL SPACE  &lt 2 BACKSPACE    &lt 1 ESC    &mt LEFT_SHIFT ENTER  &kp LEFT_GUI
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none   &kp N1  &kp N2            &kp N3                   &kp N4                          &kp N5                &kp HOME  &kp PAGE_DOWN     &kp PAGE_UP  &kp END    &none   &none
&trans  &trans  &kp LEFT_CONTROL  &kp LEFT_SHIFT           &kp TAB                         &mt CAPSLOCK GRAVE    &kp LEFT  &kp DOWN          &kp UP       &kp RIGHT  &trans  &trans
&trans  &none   &none             &mt LG(LEFT) LC(LG(UP))  &mt LC(LG(RIGHT)) LC(LG(DOWN))  &none                 &trans    &kp C_PLAY_PAUSE  &trans       &trans     &trans  &trans
                                  &trans                   &mt ENTER LEFT_CONTROL          &kp DEL               &trans    &trans            &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp EQUAL    &kp TILDE       &kp EXCLAMATION       &kp AT                 &kp PRCNT        &kp ASTERISK  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp SLASH   &none
&none  &kp MINUS    &kp UNDERSCORE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans           &kp MINUS     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp COMMA   &none
&none  &kp PERCENT  &kp HASH        &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp AMPERSAND    &kp PLUS      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD  &none
                                    &kp LGUI              &trans                 &trans           &none         &trans        &kp NUMBER_0
            >;
        };

        layer_3 {
            bindings = <
&none  &trans  &trans  &trans  &trans  &trans    &trans    &kp F7  &kp F8  &kp F9  &kp F10  &none
&none  &trans  &trans  &trans  &trans  &trans    &trans    &kp F4  &kp F5  &kp F6  &kp F11  &none
&none  &trans  &trans  &trans  &trans  &trans    &kp PLUS  &kp F1  &kp F2  &kp F3  &kp F12  &none
                       &trans  &trans  &trans    &trans    &trans  &trans
            >;
        };
    };
};
